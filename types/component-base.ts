import { ComponentCategory } from "./component-registry";

/**
 * Base props interface that all components should extend for visual dev mode integration
 *
 * @example
 * ```tsx
 * interface MyComponentProps extends ComponentBaseProps {
 *   title: string;
 *   onClick: () => void;
 * }
 *
 * export function MyComponent({ title, onClick, ...componentProps }: MyComponentProps) {
 *   return (
 *     <button {...componentProps} onClick={onClick}>
 *       {title}
 *     </button>
 *   );
 * }
 * ```
 */
export interface ComponentBaseProps {
  /** Unique component identifier for visual dev mode */
  "data-component-id": string;
  /** Component category for visual dev mode highlighting */
  "data-component-category": ComponentCategory;
  /** Test identifier for testing frameworks */
  "data-testid"?: string;
  /** Additional CSS classes */
  className?: string;
}

/**
 * Props for components that use the useComponentMetadata hook
 * This excludes the metadata attributes since they're generated by the hook
 */
export interface ComponentProps {
  /** Additional CSS classes */
  className?: string;
  /** Test identifier override (optional, defaults to component-id) */
  "data-testid"?: string;
}

/**
 * Type helper to extract component metadata attributes
 */
export type ComponentMetadataAttributes = Pick<
  ComponentBaseProps,
  "data-component-id" | "data-component-category" | "data-testid"
>;

/**
 * Utility type for components that need both base props and custom props
 */
export type WithComponentProps<T = {}> = T & ComponentProps;
